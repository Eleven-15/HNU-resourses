#include <iostream>
#include <vector>
using namespace std;

int main() {
	int n;
	cin >> n;

	if (n == 1) {
		cout << 1;
		return 0;
	}

	vector<int> dp(n + 1, 0);
	dp[1] = 1;
	dp[2] = 2;

	for (int i = 3; i <= n; i++) {
		dp[i] = dp[i - 1] + dp[i - 2];
	}

	cout << dp[n];
	return 0;
}
/*
【问题描述】
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
【输入形式】
一个正整数n表示台阶数，1≤n≤50
【输出形式】
一个正整数，表示可以爬到楼顶的方法数
【样例输入1】
2
【样例输出1】
2
【样例说明1】
有两种方法可以爬到楼顶。
1. 1 阶 + 1 阶
2. 2 阶
【样例输入2】
3
【样例输出2】
3
【样例说明2】
有三种方法可以爬到楼顶。
1. 1 阶 + 1 阶 + 1 阶
2. 1 阶 + 2 阶
3. 2 阶 + 1 阶
【运行时限制】
最大运行时间为2秒，最大运行内存为512MB。
【评判标准】
根据通过的测例数目给分，通过全部5个测试样例得满分。
 */
