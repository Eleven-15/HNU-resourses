#include <bits/stdc++.h>
using namespace std;


int main()
{
	string s0, s;
	cin >> s0;
	for (auto c : s0)
	{
		if (c != '*') {
		s.push_back(c);
		continue;	
		}
		if (!s.empty()) s.pop_back();
	}
	cout << s;
}
/*
32. M1编程题2：从字符串中移除星号
【问题描述】

给你一个包含若干星号 * 的字符串 s 。

在一步操作中，你可以：

选中 s 中的一个星号。

移除星号 左侧 最近的那个 非星号 字符，并移除该星号自身。

返回移除 所有 星号之后的字符串。

注意：

生成的输入保证总是可以执行题面中描述的操作。

可以证明结果字符串是唯一的。

【输入形式】

输入包含一行，表示字符串s，s满足以下条件：

1 <= s.length <= 105

s 由小写英文字母和星号 * 组成

s 可以执行上述操作

【输出形式】

输出包含一行，表示移除星号之后的字符串

【样例输入1】

leet**cod*e
【样例输出1】

lecoe
【样例说明1】

- 距离第 1 个星号最近的字符是 "leet**cod*e" 中的 't' ，s 变为 "lee*cod*e" 。

- 距离第 2 个星号最近的字符是 "lee*cod*e" 中的 'e' ，s 变为 "lecod*e" 。

- 距离第 3 个星号最近的字符是 "lecod*e" 中的 'd' ，s 变为 "lecoe" 。

不存在其他星号，返回 "lecoe" 。

【样例输入2】

erase*****
【样例输出2】


【样例说明2】

整个字符串都会被移除，所以返回空字符串。

【评分标准】
*/
