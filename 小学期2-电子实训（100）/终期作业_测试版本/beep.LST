C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BEEP
OBJECT MODULE PLACED IN beep.OBJ
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE beep.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************
   2          Êñá‰ª∂ÂêçÁß∞Ôºöbeep.c
   3          ËØ¥ÊòéÔºöËøõË°åÈü≥‰πêÊí≠ÊîæÁöÑ‰æãÁ®ã,Êåâ‰∏ãkey1ÈîÆÂêéÂºÄÂßãÊí≠ÊîæÈü≥‰πê
   4          ‰øÆÊîπËÆ∞ÂΩïÔºö
   5          ***********************/
   6          
   7          /**********************
   8          Âü∫‰∫éSTC15F2K60S2Á≥ªÂàóÂçïÁâáÊú∫CËØ≠Ë®ÄÁºñÁ®ãÂÆûÁé∞
   9          ‰ΩøÁî®Â¶Ç‰∏ãÂ§¥Êñá‰ª∂Ôºå‰∏çÁî®Âè¶Â§ñÂÜçÂåÖÂê´"REG51.H"
  10          ***********************/
  11          #include <STC15F2K60S2.h>
  12          #include "oled.h"
  13          #include "bmp.h"
  14          #include "stdlib.h"
  15          #define uint unsigned int
  16          #define uchar unsigned char
  17          sbit beep = P3 ^ 4; //ËúÇÈ∏£Âô®
  18          sbit key1 = P3 ^ 2; //ÊåâÈîÆ1
  19          sbit key2 = P3 ^ 3; //ÊåâÈîÆ2
  20          sbit key3 = P1 ^ 7; //ÊåâÈîÆ3
  21          u8 line = 0, line_music = 0, music = 0, flag_music = 0, flag_photo = 0, line_game = 0, ji = 0, flag1 = 0, 
             -level = 1, cxk = 0, cxk_line = 0;
  22          uchar timeh, timel, gequ = 0, shuma, caidan2 = 0, yinyue2 = 0, zhaopian2 = 0, shipin2 = 0, youxi2 = 0; //Â
             -Æö‰πâÂÆöÊó∂Âô®ÁöÑÈáçË£ÖÂÄº
  23          uint jindu = 0, score = 0, score1 = 0;
  24          bit flag, color = 0, game = 0, start_game = 0, end_game = 0; //Êí≠ÊîæÊ†áÂøó‰Ωç
  25          
  26          unsigned char weixuan[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07};      //‰ΩçÈÄâÁ†Å
  27          unsigned char caidan[] = {0x00, 0x00, 0x37, 0x07, 0x7b, 0x37, 0x3e, 0x00};       // MENU
  28          unsigned char yinyue[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f}; // MUSIC
  29          unsigned char zhaopian[] = {0x00, 0x73, 0x76, 0x3f, 0x07, 0x01, 0x3f, 0x00};     // PHOTO
  30          unsigned char shipin1[] = {0x00, 0x00, 0x3e, 0x06, 0x5e, 0x7b, 0x3f, 0x00};      // video
  31          unsigned char youxi1[] = {0x00, 0x00, 0x3d, 0x7b, 0x37, 0x07, 0x7b, 0x00};       // game
  32          unsigned char huanyin[] = {0xbe, 0x0e, 0x7b, 0x38, 0x39, 0x3f, 0x4f, 0x7b};      // welcome
  33          
  34          uchar code arrLed[] = {0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x3f, 0x7f, 0xff}; // LED ÂÄº
  35          uchar code music1[] =                                                         //Èü≥‰πê‰ª£Á†ÅÔºåÊ≠åÊõ≤‰∏∫Â≠
             -§ÂãáËÄÖÔºåÊ†ºÂºè‰∏∫: Èü≥Á¨¶, ËäÇÊãç, Èü≥Á¨¶, ËäÇÊãç,
  36              {
  37                  0x16, 0x08, 0x17, 0x08,
  38                  0x21, 0x08, 0x22, 0x08,
  39                  0x17, 0x08, 0x21, 0x08,
  40                  0x21, 0x10, 0x21, 0x08,
  41                  0x17, 0x08, 0x21, 0x08,
  42                  0x22, 0x08, 0x17, 0x08,
  43                  0x21, 0x08, 0x21, 0x10,
  44                  0x21, 0x08, 0x22, 0x08,
  45                  0x23, 0x08, 0x22, 0x08,
  46                  0x23, 0x08, 0x22, 0x08,
  47                  0x23, 0x10, 0x23, 0x08,
  48                  0x22, 0x08, 0x23, 0x10,
  49                  0x25, 0x10, 0x23, 0x10,
  50                  0x16, 0x08, 0x17, 0x08,
  51                  0x21, 0x08, 0x22, 0x08,
  52                  0x17, 0x08, 0x21, 0x08,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 2   

  53          
  54                  0x21, 0x10, 0x21, 0x08,
  55                  0x17, 0x08, 0x21, 0x08,
  56                  0x22, 0x08, 0x17, 0x08,
  57                  0x21, 0x08, 0x21, 0x10,
  58                  0x21, 0x08, 0x22, 0x08,
  59                  0x23, 0x08, 0x22, 0x08,
  60                  0x23, 0x08, 0x22, 0x08,
  61          
  62                  0x23, 0x10, 0x23, 0x08,
  63                  0x22, 0x08, 0x23, 0x10,
  64                  0x25, 0x10, 0x23, 0x10,
  65                  0x25, 0x10, 0x23, 0x14,
  66                  0x25, 0x08, 0x23, 0x14,
  67                  0x25, 0x08, 0x23, 0x08,
  68                  0x25, 0x08, 0x26, 0x08,
  69                  0x23, 0x08, 0x25, 0x10,
  70                  0x25, 0x08, 0x23, 0x14,
  71                  0x25, 0x08, 0x23, 0x14,
  72                  0x25, 0x08, 0x23, 0x08,
  73                  0x25, 0x08, 0x26, 0x08,
  74                  0x23, 0x08, 0x25, 0x10,
  75                  0x25, 0x08, 0x25, 0x08,
  76                  0x23, 0x08, 0x22, 0x08,
  77                  0x22, 0x10, 0x22, 0x10,
  78                  0x21, 0x08, 0x23, 0x08,
  79                  0x23, 0x08, 0x22, 0x08,
  80                  0x22, 0x10, 0x22, 0x10,
  81                  0x21, 0x08, 0x21, 0x08,
  82                  0x16, 0x20, 0x25, 0x08,
  83                  0x25, 0x08, 0x23, 0x08,
  84                  0x22, 0x08, 0x22, 0x10,
  85          
  86                  0x22, 0x10, 0x21, 0x08,
  87                  0x23, 0x08, 0x23, 0x08,
  88                  0x22, 0x08, 0x22, 0x10,
  89                  0x22, 0x10, 0x21, 0x08,
  90                  0x21, 0x08, 0x16, 0x20,
  91                  0x00
  92          
  93          };
  94          uchar code music2[] = //Ê≠åÊõ≤‰∏∫Á®ªÈ¶ô
  95              {
  96                  0x21, 0x06,
  97                  0x21, 0x06,
  98                  0x16, 0x06,
  99                  0x21, 0x0C,
 100                  0x16, 0x06,
 101                  0x21, 0x06,
 102          
 103                  0x21, 0x06,
 104                  0x21, 0x06,
 105                  0x22, 0x06,
 106                  0x22, 0x06,
 107                  0x22, 0x06,
 108                  0x22, 0x06,
 109                  0x22, 0x06,
 110                  0x23, 0x06,
 111                  0x21, 0x0C,
 112          
 113                  0x21, 0x0C,
 114                  0x16, 0x06,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 3   

 115                  0x11, 0x06,
 116                  0x21, 0x06,
 117                  0x21, 0x06,
 118          
 119                  0x22, 0x06,
 120                  0x22, 0x06,
 121                  0x22, 0x06,
 122                  0x22, 0x06,
 123                  0x22, 0x06,
 124                  0x23, 0x06,
 125                  0x21, 0x06,
 126          
 127                  0x21, 0x0C,
 128                  0x16, 0x06,
 129                  0x11, 0x06,
 130                  0x21, 0x06,
 131                  0x21, 0x06,
 132          
 133                  0x22, 0x06,
 134                  0x22, 0x06,
 135                  0x22, 0x06,
 136                  0x22, 0x06,
 137                  0x21, 0x0C,
 138                  0x22, 0x06,
 139                  0x23, 0x06,
 140          
 141                  0x21, 0x06,
 142                  0x21, 0x06,
 143                  0x21, 0x06,
 144                  0x21, 0x06,
 145                  0x21, 0x06,
 146                  0x21, 0x06,
 147                  0x21, 0x06,
 148                  0x21, 0x06,
 149                  0x16, 0x06,
 150          
 151                  0x21, 0x0C,
 152                  0x16, 0x06,
 153                  0x11, 0x06,
 154                  0x21, 0x06,
 155                  0x21, 0x06,
 156          
 157                  0x22, 0x06,
 158                  0x22, 0x06,
 159                  0x22, 0x06,
 160                  0x22, 0x06,
 161                  0x22, 0x06,
 162                  0x23, 0x06,
 163                  0x21, 0x06,
 164                  0x21, 0x06,
 165          
 166                  0x21, 0x0C,
 167                  0x16, 0x06,
 168                  0x11, 0x06,
 169                  0x21, 0x06,
 170                  0x21, 0x06,
 171          
 172                  0x22, 0x06,
 173                  0x22, 0x06,
 174                  0x22, 0x06,
 175                  0x22, 0x06,
 176                  0x22, 0x06,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 4   

 177                  0x23, 0x06,
 178                  0x21, 0x0C,
 179          
 180                  0x15, 0x06,
 181                  0x24, 0x18,
 182                  0x23, 0x06,
 183                  0x23, 0x06,
 184                  0x22, 0x06,
 185                  0x22, 0x06,
 186                  0x21, 0x06,
 187                  0x22, 0x06,
 188                  0x21, 0x06,
 189                  0x23, 0x0C,
 190                  0x21, 0x30,
 191          
 192                  0x00, 0x0C};
 193          uchar code music3[] = //Ê≠åÊõ≤‰∏∫Êô¥Â§©
 194              {
 195                  0x25,
 196                  0x10,
 197                  0x25,
 198                  0x10,
 199                  0x21,
 200                  0x10,
 201                  0x21,
 202                  0x18,
 203                  0x22,
 204                  0x10,
 205                  0x23,
 206                  0x10,
 207          
 208                  0x25,
 209                  0x10,
 210                  0x25,
 211                  0x10,
 212                  0x21,
 213                  0x10,
 214                  0x21,
 215                  0x10,
 216                  0x22,
 217                  0x08,
 218                  0x23,
 219                  0x08,
 220                  0x22,
 221                  0x08,
 222                  0x21,
 223                  0x08,
 224                  0x15,
 225                  0x10,
 226          
 227                  0x25,
 228                  0x10,
 229                  0x25,
 230                  0x10,
 231                  0x21,
 232                  0x10,
 233                  0x21,
 234                  0x18,
 235                  0x22,
 236                  0x10,
 237                  0x23,
 238                  0x10,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 5   

 239          
 240                  0x23,
 241                  0x18,
 242                  0x22,
 243                  0x08,
 244                  0x23,
 245                  0x08,
 246                  0x24,
 247                  0x08,
 248                  0x23,
 249                  0x08,
 250                  0x22,
 251                  0x08,
 252                  0x24,
 253                  0x08,
 254                  0x23,
 255                  0x08,
 256                  0x22,
 257                  0x08,
 258                  0x21,
 259                  0x10,
 260          
 261                  0x15,
 262                  0x10,
 263                  0x21,
 264                  0x10,
 265                  0x21,
 266                  0x10,
 267                  0x23,
 268                  0x10,
 269                  0x24,
 270                  0x10,
 271                  0x23,
 272                  0x10,
 273                  0x22,
 274                  0x10,
 275                  0x21,
 276                  0x08,
 277                  0x22,
 278                  0x08,
 279          
 280                  0x23,
 281                  0x10,
 282                  0x23,
 283                  0x10,
 284                  0x23,
 285                  0x10,
 286                  0x23,
 287                  0x10,
 288                  0x22,
 289                  0x08,
 290                  0x23,
 291                  0x08,
 292                  0x22,
 293                  0x10,
 294                  0x21,
 295                  0x18,
 296          
 297                  0x15,
 298                  0x10,
 299                  0x21,
 300                  0x10,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 6   

 301                  0x22,
 302                  0x10,
 303                  0x23,
 304                  0x10,
 305                  0x24,
 306                  0x10,
 307                  0x23,
 308                  0x10,
 309                  0x22,
 310                  0x10,
 311                  0x21,
 312                  0x08,
 313                  0x22,
 314                  0x08,
 315          
 316                  0x13,
 317                  0x10,
 318                  0x23,
 319                  0x10,
 320                  0x23,
 321                  0x10,
 322                  0x23,
 323                  0x10,
 324                  0x22,
 325                  0x08,
 326                  0x23,
 327                  0x08,
 328                  0x22,
 329                  0x10,
 330                  0x21,
 331                  0x1C,
 332                  0x17,
 333                  0x08,
 334          
 335                  0x21,
 336                  0x08,
 337                  0x21,
 338                  0x08,
 339                  0x21,
 340                  0x08,
 341                  0x21,
 342                  0x08,
 343                  0x17,
 344                  0x10,
 345                  0x21,
 346                  0x10,
 347                  0x21,
 348                  0x08,
 349          
 350                  0x21,
 351                  0x08,
 352                  0x21,
 353                  0x08,
 354                  0x21,
 355                  0x08,
 356                  0x21,
 357                  0x08,
 358                  0x17,
 359                  0x10,
 360                  0x21,
 361                  0x10,
 362                  0x21,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 7   

 363                  0x08,
 364          
 365                  0x21,
 366                  0x08,
 367                  0x21,
 368                  0x08,
 369                  0x21,
 370                  0x08,
 371                  0x21,
 372                  0x08,
 373                  0x17,
 374                  0x10,
 375                  0x21,
 376                  0x10,
 377                  0x21,
 378                  0x08,
 379          
 380                  0x21,
 381                  0x08,
 382                  0x21,
 383                  0x08,
 384                  0x21,
 385                  0x08,
 386                  0x21,
 387                  0x08,
 388                  0x25,
 389                  0x08,
 390                  0x25,
 391                  0x10,
 392                  0x25,
 393                  0x08,
 394          
 395                  0x25,
 396                  0x08,
 397                  0x25,
 398                  0x08,
 399                  0x25,
 400                  0x08,
 401                  0x25,
 402                  0x08,
 403                  0x25,
 404                  0x10,
 405                  0x25,
 406                  0x08,
 407                  0x25,
 408                  0x08,
 409                  0x25,
 410                  0x08,
 411                  0x25,
 412                  0x08,
 413                  0x25,
 414                  0x08,
 415                  0x25,
 416                  0x08,
 417                  0x24,
 418                  0x08,
 419                  0x23,
 420                  0x08,
 421                  0x23,
 422                  0x08,
 423                  0x23,
 424                  0x1C,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 8   

 425          
 426                  0x21,
 427                  0x08,
 428                  0x21,
 429                  0x08,
 430                  0x21,
 431                  0x08,
 432                  0x21,
 433                  0x08,
 434                  0x16,
 435                  0x08,
 436                  0x17,
 437                  0x08,
 438                  0x21,
 439                  0x08,
 440                  0x25,
 441                  0x08,
 442                  0x24,
 443                  0x08,
 444                  0x23,
 445                  0x08,
 446                  0x21,
 447                  0x08,
 448                  0x21,
 449                  0x08,
 450                  0x21,
 451                  0x18,
 452          
 453                  0x21,
 454                  0x08,
 455                  0x21,
 456                  0x08,
 457                  0x21,
 458                  0x08,
 459                  0x21,
 460                  0x08,
 461                  0x23,
 462                  0x10,
 463                  0x21,
 464                  0x10,
 465                  0x16,
 466                  0x08,
 467                  0x17,
 468                  0x08,
 469                  0x21,
 470                  0x08,
 471                  0x25,
 472                  0x08,
 473                  0x24,
 474                  0x08,
 475                  0x23,
 476                  0x08,
 477                  0x21,
 478                  0x08,
 479                  0x22,
 480                  0x08,
 481                  0x22,
 482                  0x1C,
 483          
 484                  0x00,
 485                  0x00,
 486          };
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 9   

 487          uchar code music4[] = //ÊºîÂëò
 488              {
 489                  0x15, 0x0C,
 490                  0x24, 0x0C,
 491                  0x23, 0x0C,
 492                  0x23, 0x14,
 493          
 494                  0x21, 0x0C,
 495                  0x22, 0x0C,
 496                  0x23, 0x06,
 497                  0x25, 0x06,
 498                  0x21, 0x0C,
 499                  0x21, 0x0C,
 500                  0x16, 0x0C,
 501                  0x17, 0x0C,
 502                  0x16, 0x0C,
 503                  0x16, 0x30,
 504          
 505                  0x23, 0x0C,
 506                  0x23, 0x0C,
 507                  0x23, 0x0C,
 508                  0x24, 0x0C,
 509                  0x23, 0x0C,
 510                  0x24, 0x0C,
 511                  0x16, 0x0C,
 512                  0x16, 0x0C,
 513                  0x22, 0x18,
 514          
 515                  0x23, 0x06,
 516                  0x23, 0x06,
 517                  0x24, 0x0C,
 518                  0x23, 0x0C,
 519                  0x24, 0x0C,
 520                  0x16, 0x0C,
 521                  0x16, 0x0C,
 522                  0x22, 0x18,
 523          
 524                  0x21, 0x0C,
 525                  0x22, 0x0C,
 526                  0x21, 0x0C,
 527                  0x22, 0x0C,
 528                  0x21, 0x0C,
 529                  0x22, 0x12,
 530                  0x23, 0x06,
 531                  0x23, 0x18,
 532          
 533                  0x15, 0x0C,
 534                  0x24, 0x0C,
 535                  0x23, 0x0C,
 536                  0x23, 0x14,
 537          
 538                  0x21, 0x0C,
 539                  0x22, 0x0C,
 540                  0x23, 0x06,
 541                  0x25, 0x06,
 542                  0x21, 0x0C,
 543                  0x21, 0x0C,
 544                  0x16, 0x0C,
 545                  0x17, 0x0C,
 546                  0x16, 0x06,
 547                  0x16, 0x30,
 548          
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 10  

 549                  0x23, 0x0C,
 550                  0x23, 0x0C,
 551                  0x24, 0x0C,
 552                  0x23, 0x0C,
 553                  0x24, 0x0C,
 554                  0x16, 0x0C,
 555                  0x16, 0x0C,
 556                  0x22, 0x18,
 557          
 558                  0x23, 0x06,
 559                  0x23, 0x06,
 560                  0x24, 0x0C,
 561                  0x23, 0x0C,
 562                  0x24, 0x0C,
 563                  0x16, 0x0C,
 564                  0x16, 0x0C,
 565                  0x22, 0x18,
 566          
 567                  0x15, 0x06,
 568                  0x15, 0x06,
 569                  0x23, 0x0C,
 570                  0x22, 0x0C,
 571                  0x23, 0x0C,
 572                  0x22, 0x0C,
 573                  0x21, 0x30,
 574          
 575                  0x35, 0x06,
 576                  0x35, 0x06,
 577                  0x35, 0x0C,
 578                  0x34, 0x0C,
 579                  0x33, 0x0C,
 580                  0x34, 0x0C,
 581                  0x35, 0x0C,
 582                  0x26, 0x06,
 583                  0x26, 0x0C,
 584                  0x26, 0x0C,
 585                  0x26, 0x0C,
 586                  0x27, 0x0C,
 587                  0x31, 0x0C,
 588                  0x27, 0x0C,
 589                  0x27, 0x14,
 590          
 591                  0x35, 0x0C,
 592                  0x35, 0x0C,
 593                  0x34, 0x0C,
 594                  0x33, 0x0C,
 595                  0x34, 0x0C,
 596                  0x35, 0x0C,
 597                  0x27, 0x0C,
 598                  0x27, 0x0C,
 599                  0x27, 0x0C,
 600                  0x27, 0x0C,
 601                  0x31, 0x0C,
 602                  0x32, 0x0C,
 603                  0x31, 0x0C,
 604                  0x31, 0x14,
 605          
 606                  0x33, 0x06,
 607                  0x33, 0x06,
 608                  0x34, 0x0C,
 609                  0x33, 0x0C,
 610                  0x34, 0x0C,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 11  

 611                  0x33, 0x0C,
 612                  0x34, 0x0C,
 613                  0x26, 0x06,
 614                  0x26, 0x0C,
 615                  0x26, 0x0C,
 616                  0x26, 0x0C,
 617                  0x24, 0x0C,
 618                  0x31, 0x0C,
 619                  0x27, 0x0C,
 620                  0x27, 0x14,
 621          
 622                  0x31, 0x06,
 623                  0x31, 0x06,
 624                  0x32, 0x0C,
 625                  0x31, 0x0C,
 626                  0x32, 0x0C,
 627                  0x31, 0x0C,
 628                  0x32, 0x0C,
 629                  0x31, 0x0C,
 630                  0x32, 0x0C,
 631                  0x31, 0x0C,
 632                  0x32, 0x0C,
 633                  0x31, 0x0C,
 634                  0x32, 0x0C,
 635                  0x34, 0x0C,
 636                  0x34, 0x0C,
 637                  0x33, 0x18,
 638          
 639                  0x35, 0x06,
 640                  0x35, 0x06,
 641                  0x35, 0x0C,
 642                  0x34, 0x0C,
 643                  0x33, 0x0C,
 644                  0x34, 0x0C,
 645                  0x35, 0x0C,
 646                  0x26, 0x0C,
 647                  0x26, 0x0C,
 648                  0x26, 0x0C,
 649                  0x26, 0x0C,
 650                  0x27, 0x0C,
 651                  0x31, 0x0C,
 652                  0x27, 0x0C,
 653                  0x27, 0x14,
 654          
 655                  0x35, 0x06,
 656                  0x35, 0x06,
 657                  0x35, 0x0C,
 658                  0x34, 0x0C,
 659                  0x33, 0x0C,
 660                  0x34, 0x0C,
 661                  0x35, 0x0C,
 662                  0x27, 0x0C,
 663                  0x27, 0x0C,
 664                  0x27, 0x0C,
 665                  0x27, 0x0C,
 666                  0x25, 0x0C,
 667                  0x32, 0x0C,
 668                  0x31, 0x0C,
 669                  0x31, 0x14,
 670          
 671                  0x33, 0x06,
 672                  0x33, 0x06,
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 12  

 673                  0x34, 0x0C,
 674                  0x33, 0x0C,
 675                  0x34, 0x0C,
 676                  0x33, 0x0C,
 677                  0x34, 0x0C,
 678                  0x26, 0x0C,
 679                  0x26, 0x0C,
 680                  0x26, 0x0C,
 681                  0x26, 0x0C,
 682                  0x24, 0x0C,
 683                  0x31, 0x0C,
 684                  0x27, 0x0C,
 685                  0x27, 0x30,
 686          
 687                  0x27, 0x0C,
 688                  0x25, 0x0C,
 689                  0x32, 0x0C,
 690                  0x31, 0x0C,
 691                  0x31, 0x30,
 692          
 693                  0x00, 0x18
 694          
 695          };
 696          uchar code quzi[] = //Ê≠§Êï∞ÁªÑÊï∞ÊçÆ‰∏∫ÂêÑ‰∏™Èü≥Á¨¶Âú®ÂÆöÊó∂Âô®‰∏≠ÁöÑÈáçË£ÖÂÄºÔºåÁ¨¨‰∏ÄÂàóÊòØÈ´ò‰ΩçÔºåÁ¨¨
             -‰∫åÂàóÊòØ‰Ωé‰Ωç //Êó∂Èó¥
 697              {
 698                  0xf8, 0x8c, //‰ΩéÂÖ´Â∫¶Ôºå‰Ωé1
 699                  0xf9, 0x5b,
 700                  0xfa, 0x15, //‰Ωé3
 701                  0xfa, 0x67,
 702                  0xfb, 0x04, //‰Ωé5
 703                  0xfb, 0x90,
 704                  0xfc, 0x0c, //‰Ωé7
 705                  0xfc, 0x44, //‰∏≠Â§ÆCË∞É
 706                  0xfc, 0xac, //‰∏≠2
 707                  0xfd, 0x09,
 708                  0xfd, 0x34, //‰∏≠4
 709                  0xfd, 0x82,
 710                  0xfd, 0xc8, //‰∏≠6
 711                  0xfe, 0x06,
 712                  0xfe, 0x22, //È´òÂÖ´Â∫¶ÔºåÈ´ò1
 713                  0xfe, 0x56,
 714                  0xfe, 0x6e, //È´ò3
 715                  0xfe, 0x9a,
 716                  0xfe, 0xc1, //È´ò5
 717                  0xfe, 0xe4,
 718                  0xff, 0x03 //È´ò7
 719          };
 720          
 721          void display4()
 722          {
 723   1          OLED_ShowCHinese(0, 5, 23);  //
 724   1          OLED_ShowCHinese(16, 5, 24); //
 725   1          OLED_ShowCHinese(32, 5, 25); //
 726   1          OLED_ShowCHinese(48, 5, 26); //Ê≠£Âú®Êí≠Êîæ
 727   1          OLED_ShowChar(64, 5, '-', 16);
 728   1      }
 729          void vedio()
 730          {
 731   1          while (1)
 732   1          {
 733   2              OLED_DrawBMP1(32, 0, 64, 64, cxk1_64x64);
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 13  

 734   2              if (key3 == 0)
 735   2                  break;
 736   2              delay_ms(30);
 737   2              OLED_DrawBMP1(32, 0, 64, 64, cxk2_64x64);
 738   2              if (key3 == 0)
 739   2                  break;
 740   2              delay_ms(30);
 741   2              OLED_DrawBMP1(32, 0, 64, 64, cxk3_64x64);
 742   2              if (key3 == 0)
 743   2                  break;
 744   2              delay_ms(30);
 745   2              OLED_DrawBMP1(32, 0, 64, 64, cxk4_64x64);
 746   2              if (key3 == 0)
 747   2                  break;
 748   2              delay_ms(30);
 749   2              OLED_DrawBMP1(32, 0, 64, 64, cxk5_64x64);
 750   2              if (key3 == 0)
 751   2                  break;
 752   2              delay_ms(30);
 753   2              OLED_DrawBMP1(32, 0, 64, 64, cxk6_64x64);
 754   2              if (key3 == 0)
 755   2                  break;
 756   2              delay_ms(30);
 757   2              OLED_DrawBMP1(32, 0, 64, 64, cxk7_64x64);
 758   2              if (key3 == 0)
 759   2                  break;
 760   2              delay_ms(30);
 761   2              OLED_DrawBMP1(32, 0, 64, 64, cxk8_64x64);
 762   2              if (key3 == 0)
 763   2                  break;
 764   2              delay_ms(30);
 765   2              OLED_DrawBMP1(32, 0, 64, 64, cxk9_64x64);
 766   2              if (key3 == 0)
 767   2                  break;
 768   2              delay_ms(30);
 769   2              OLED_DrawBMP1(32, 0, 64, 64, cxk10_64x64);
 770   2              if (key3 == 0)
 771   2                  break;
 772   2              delay_ms(30);
 773   2              OLED_DrawBMP1(32, 0, 64, 64, cxk11_64x64);
 774   2              if (key3 == 0)
 775   2                  break;
 776   2              delay_ms(30);
 777   2              OLED_DrawBMP1(32, 0, 64, 64, cxk12_64x64);
 778   2              if (key3 == 0)
 779   2                  break;
 780   2              delay_ms(30);
 781   2              OLED_DrawBMP1(32, 0, 64, 64, cxk13_64x64);
 782   2              if (key3 == 0)
 783   2                  break;
 784   2              delay_ms(30);
 785   2              OLED_DrawBMP1(32, 0, 64, 64, cxk14_64x64);
 786   2              if (key3 == 0)
 787   2                  break;
 788   2              delay_ms(30);
 789   2              OLED_DrawBMP1(32, 0, 64, 64, cxk15_64x64);
 790   2              if (key3 == 0)
 791   2                  break;
 792   2              delay_ms(30);
 793   2              OLED_DrawBMP1(32, 0, 64, 64, cxk16_64x64);
 794   2              if (key3 == 0)
 795   2                  break;
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 14  

 796   2              delay_ms(30);
 797   2              OLED_DrawBMP1(32, 0, 64, 64, cxk17_64x64);
 798   2              if (key3 == 0)
 799   2                  break;
 800   2              delay_ms(30);
 801   2              OLED_DrawBMP1(32, 0, 64, 64, cxk18_64x64);
 802   2              if (key3 == 0)
 803   2                  break;
 804   2              delay_ms(30);
 805   2              OLED_DrawBMP1(32, 0, 64, 64, cxk19_64x64);
 806   2              if (key3 == 0)
 807   2                  break;
 808   2              delay_ms(30);
 809   2              OLED_DrawBMP1(32, 0, 64, 64, cxk20_64x64);
 810   2              if (key3 == 0)
 811   2                  break;
 812   2              delay_ms(30);
 813   2              OLED_DrawBMP1(32, 0, 64, 64, cxk21_64x64);
 814   2              if (key3 == 0)
 815   2                  break;
 816   2              delay_ms(30);
 817   2              OLED_DrawBMP1(32, 0, 64, 64, cxk22_64x64);
 818   2              if (key3 == 0)
 819   2                  break;
 820   2              delay_ms(30);
 821   2              OLED_DrawBMP1(32, 0, 64, 64, cxk23_64x64);
 822   2              if (key3 == 0)
 823   2                  break;
 824   2              delay_ms(30);
 825   2              OLED_DrawBMP1(32, 0, 64, 64, cxk24_64x64);
 826   2              if (key3 == 0)
 827   2                  break;
 828   2              delay_ms(30);
 829   2              OLED_DrawBMP1(32, 0, 64, 64, cxk25_64x64);
 830   2              if (key3 == 0)
 831   2                  break;
 832   2              delay_ms(30);
 833   2              OLED_DrawBMP1(32, 0, 64, 64, cxk26_64x64);
 834   2              if (key3 == 0)
 835   2                  break;
 836   2              delay_ms(30);
 837   2              OLED_DrawBMP1(32, 0, 64, 64, cxk27_64x64);
 838   2              if (key3 == 0)
 839   2                  break;
 840   2              delay_ms(30);
 841   2              OLED_DrawBMP1(32, 0, 64, 64, cxk28_64x64);
 842   2              if (key3 == 0)
 843   2                  break;
 844   2              delay_ms(30);
 845   2              OLED_DrawBMP1(32, 0, 64, 64, cxk29_64x64);
 846   2              if (key3 == 0)
 847   2                  break;
 848   2              delay_ms(30);
 849   2              OLED_DrawBMP1(32, 0, 64, 64, cxk30_64x64);
 850   2              if (key3 == 0)
 851   2                  break;
 852   2              delay_ms(30);
 853   2              OLED_DrawBMP1(32, 0, 64, 64, cxk31_64x64);
 854   2              if (key3 == 0)
 855   2                  break;
 856   2              delay_ms(30);
 857   2              OLED_DrawBMP1(32, 0, 64, 64, cxk32_64x64);
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 15  

 858   2              if (key3 == 0)
 859   2                  break;
 860   2              delay_ms(30);
 861   2              OLED_DrawBMP1(32, 0, 64, 64, cxk33_64x64);
 862   2              if (key3 == 0)
 863   2                  break;
 864   2              delay_ms(30);
 865   2              OLED_DrawBMP1(32, 0, 64, 64, cxk34_64x64);
 866   2              if (key3 == 0)
 867   2                  break;
 868   2              delay_ms(30);
 869   2              OLED_DrawBMP1(32, 0, 64, 64, cxk35_64x64);
 870   2              if (key3 == 0)
 871   2                  break;
 872   2              delay_ms(30);
 873   2              OLED_DrawBMP1(32, 0, 64, 64, cxk36_64x64);
 874   2              if (key3 == 0)
 875   2                  break;
 876   2              delay_ms(30);
 877   2              OLED_DrawBMP1(32, 0, 64, 64, cxk37_64x64);
 878   2              if (key3 == 0)
 879   2                  break;
 880   2              delay_ms(30);
 881   2              OLED_DrawBMP1(32, 0, 64, 64, cxk38_64x64);
 882   2              if (key3 == 0)
 883   2                  break;
 884   2              delay_ms(30);
 885   2              OLED_DrawBMP1(32, 0, 64, 64, cxk39_64x64);
 886   2              if (key3 == 0)
 887   2                  break;
 888   2              delay_ms(30);
 889   2              OLED_DrawBMP1(32, 0, 64, 64, cxk40_64x64);
 890   2              if (key3 == 0)
 891   2                  break;
 892   2              delay_ms(30);
 893   2              OLED_DrawBMP1(32, 0, 64, 64, cxk41_64x64);
 894   2              if (key3 == 0)
 895   2                  break;
 896   2              delay_ms(30);
 897   2              OLED_DrawBMP1(32, 0, 64, 64, cxk42_64x64);
 898   2              if (key3 == 0)
 899   2                  break;
 900   2              delay_ms(30);
 901   2              OLED_DrawBMP1(32, 0, 64, 64, cxk43_64x64);
 902   2              if (key3 == 0)
 903   2                  break;
 904   2              delay_ms(30);
 905   2              OLED_DrawBMP1(32, 0, 64, 64, cxk44_64x64);
 906   2              if (key3 == 0)
 907   2                  break;
 908   2              delay_ms(30);
 909   2              OLED_DrawBMP1(32, 0, 64, 64, cxk45_64x64);
 910   2              if (key3 == 0)
 911   2                  break;
 912   2              delay_ms(30);
 913   2              OLED_DrawBMP1(32, 0, 64, 64, cxk46_64x64);
 914   2              if (key3 == 0)
 915   2                  break;
 916   2              delay_ms(30);
 917   2          }
 918   1      }
 919          /**********************
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 16  

 920          ÂáΩÊï∞ÂêçÁß∞Ôºövoid delay(unsigned int xms)
 921          ÂäüËÉΩÊèèËø∞ÔºöÂª∂Êó∂
 922          ÂÖ•Âè£ÂèÇÊï∞ÔºöxmsÔºöËæìÂÖ•ÈúÄË¶ÅÂª∂Êó∂ÁöÑÊØ´ÁßíÂÄº
 923          Âá∫Âè£ÂèÇÊï∞ÔºöÊó†
 924          Â§áÊ≥®Ôºö
 925          
 926          ***********************/
 927          void delay(unsigned int xms)
 928          {
 929   1          uint i, j;
 930   1          for (i = xms; i > 0; i--)
 931   1              for (j = 124; j > 0; j--)
 932   1                  ;
 933   1      }
 934          /**********************
 935          ÂáΩÊï∞ÂêçÁß∞Ôºöuchar quyin(uchar tem)
 936          ÂäüËÉΩÊèèËø∞ÔºöÂú®quziÊï∞ÁªÑ‰∏≠ÔºåÊâæÂà∞musicÊï∞ÁªÑÂÆö‰πâÁöÑÁÆÄË∞±Èü≥Á¨¶ÁöÑÈáçË£ÖÂÄºÔºåÂπ∂ËøîÂõûÂÖ∂Âú®quzi
             -Êï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆ
 937          ÂÖ•Âè£ÂèÇÊï∞ÔºötemÔºömusicÊï∞ÁªÑ‰∏≠ÂÆö‰πâÁöÑÁÆÄË∞±Èü≥Á¨¶
 938          Âá∫Âè£ÂèÇÊï∞ÔºöËøîÂõûÁöÑÊòØtemÈü≥Á¨¶Âú®quziÊï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆÂÄº
 939          Â§áÊ≥®Ôºö
 940          
 941          ***********************/
 942          uchar quyin(uchar tem)
 943          {
 944   1          uchar qudiao, jp, weizhi; //ÂÆö‰πâÊõ≤Ë∞ÉÔºåÈü≥Á¨¶Âíå‰ΩçÁΩÆ
 945   1          qudiao = tem / 16;        //È´ò4‰ΩçÊòØÊõ≤Ë∞ÉÂÄº
 946   1          jp = tem % 16;            //‰Ωé4‰ΩçÊòØÈü≥Á¨¶
 947   1          if (qudiao == 1)          //ÂΩìÊõ≤Ë∞ÉÂÄº‰∏∫1Êó∂ÔºåÂç≥ÊòØ‰ΩéÂÖ´Â∫¶Ôºå‰ΩéÂÖ´Â∫¶Âú®quziÊï∞ÁªÑ‰∏≠Âü∫ÂùÄ‰∏∫
             -0
 948   1              qudiao = 0;
 949   1          else if (qudiao == 2) //ÂΩìÊõ≤Ë∞ÉÂÄº‰∏∫2Êó∂ÔºåÂç≥ÊòØ‰∏≠ÂÖ´Â∫¶Ôºå‰∏≠ÂÖ´Â∫¶Âú®quziÊï∞ÁªÑ‰∏≠Âü∫ÂùÄ‰∏∫14
 950   1              qudiao = 14;
 951   1          else if (qudiao == 3) //ÂΩìÊõ≤Ë∞ÉÂÄº‰∏∫3Êó∂ÔºåÂç≥ÊòØÈ´òÂÖ´Â∫¶ÔºåÈ´òÂÖ´Â∫¶Âú®quziÊï∞ÁªÑ‰∏≠ÔºåÂü∫ÂùÄ‰∏∫2
             -8
 952   1              qudiao = 28;
 953   1          weizhi = qudiao + (jp - 1) * 2; //ÈÄöËøáÂü∫ÂùÄÂä†‰∏äÈü≥Á¨¶‰Ωú‰∏∫ÂÅèÁßªÈáèÔºåÂç≥ÂèØÂÆö‰ΩçÊ≠§Èü≥Á¨¶Âú®qu
             -ziÊï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆ
 954   1          return weizhi;                  //ËøîÂõûËøô‰∏Ä‰∏™‰ΩçÁΩÆÂÄº
 955   1      }
 956          /**********************
 957          ÂáΩÊï∞ÂêçÁß∞Ôºövoid playmusic()
 958          ÂäüËÉΩÊèèËø∞ÔºöÊí≠ÊîæÈü≥‰πê
 959          ÂÖ•Âè£ÂèÇÊï∞ÔºöÊó†
 960          Âá∫Âè£ÂèÇÊï∞ÔºöÊó†
 961          Â§áÊ≥®Ôºö
 962          
 963          ***********************/
 964          void playmusic()
 965          {
 966   1          uchar p, m, tem; // m‰∏∫ËäÇÊãç
 967   1          music = 1;
 968   1          OLED_Clear();
 969   1          flag = 1;
 970   1          while (key1 == 1 && key3 == 1)
 971   1          {
 972   2              while (flag == 1) //Ëã•Êí≠ÊîæÁöÑÊ†áÂøó‰Ωç‰∏∫1ÂàôÊí≠ÊîæÈü≥‰πê
 973   2              {
 974   3                  if (gequ == 0) //Ê≠åÊõ≤ÈÄâÊã©‰Ωç‰∏∫0ÔºåÂàôÊí≠ÊîæÂ≠§ÂãáËÄÖ
 975   3                  {
 976   4                      p = music1[jindu];
 977   4                      if (p == 0x00) //Â¶ÇÊûúÁ¢∞Âà∞ÁªìÊùüÁ¨¶,Âª∂Êó∂1Áßí,ÂõûÂà∞ÂºÄÂßãÂÜçÊù•‰∏ÄÈÅç
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 17  

 978   4                      {
 979   5                          jindu = 0;
 980   5                          delay(1000);
 981   5                          break;
 982   5                      }
 983   4                      else if (p == 0xff) //Ëã•Á¢∞Âà∞‰ºëÊ≠¢Á¨¶,Âª∂Êó∂100ms,ÁªßÁª≠Âèñ‰∏ã‰∏ÄÈü≥Á¨¶
 984   4                      {
 985   5                          jindu = jindu + 1;
 986   5                          delay(100);
 987   5                          TR0 = 0;
 988   5                          break;
 989   5                      }
 990   4                      else //Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãÂèñÈü≥Á¨¶ÂíåËäÇÊãç
 991   4                      {
 992   5                          tem = quyin(music1[jindu]); //ÂèñÂá∫ÂΩìÂâçÈü≥Á¨¶Âú®quziÊï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆÂÄº
 993   5                          timeh = quzi[tem];          //ÊääÈü≥Á¨¶Áõ∏Â∫îÁöÑËÆ°Êó∂Âô®ÈáçË£ÖËΩΩÂÄºËµã‰∫àtimehÂíåtim
             -el
 994   5                          timel = quzi[tem + 1];
 995   5                          jindu++;
 996   5                          TH0 = timeh; //ÊäätimehÂíåtimelËµã‰∫àËÆ°Êó∂Âô®
 997   5                          TL0 = timel;
 998   5                          m = music1[jindu]; //ÂèñÂæóËäÇÊãç
 999   5                          jindu++;
1000   5                      }
1001   4                      TR0 = 1;        //ÂºÄÂÆöÊó∂Âô®1
1002   4                      delay(m * 180); //Á≠âÂæÖËäÇÊãçÂÆåÊàê, ÈÄöËøáP3^4Âè£ËæìÂá∫Èü≥È¢ë
1003   4                      TR0 = 0;        //ÂÖ≥ÂÆöÊó∂Âô®1
1004   4                      beep = 0;       //‰ΩøbeepÁ´ØÂè£ÁΩÆ0ÔºåËµ∑‰øùÊä§ËúÇÈ∏£Âô®‰ΩúÁî®
1005   4                  }
1006   3                  else if (gequ == 1) //Ê≠åÊõ≤ÈÄâÊã©‰Ωç‰∏∫1ÔºåÂàôÊí≠ÊîæÁ®ªÈ¶ô
1007   3                  {
1008   4                      p = music2[jindu];
1009   4                      if (p == 0x00) //Â¶ÇÊûúÁ¢∞Âà∞ÁªìÊùüÁ¨¶,Âª∂Êó∂1Áßí,ÂõûÂà∞ÂºÄÂßãÂÜçÊù•‰∏ÄÈÅç
1010   4                      {
1011   5                          jindu = 0;
1012   5                          delay(1000);
1013   5                          break;
1014   5                      }
1015   4                      else if (p == 0xff) //Ëã•Á¢∞Âà∞‰ºëÊ≠¢Á¨¶,Âª∂Êó∂100ms,ÁªßÁª≠Âèñ‰∏ã‰∏ÄÈü≥Á¨¶
1016   4                      {
1017   5                          jindu = jindu + 1;
1018   5                          delay(100);
1019   5                          TR0 = 0;
1020   5                          break;
1021   5                      }
1022   4                      else //Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãÂèñÈü≥Á¨¶ÂíåËäÇÊãç
1023   4                      {
1024   5                          tem = quyin(music2[jindu]); //ÂèñÂá∫ÂΩìÂâçÈü≥Á¨¶Âú®quziÊï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆÂÄº
1025   5                          timeh = quzi[tem];          //ÊääÈü≥Á¨¶Áõ∏Â∫îÁöÑËÆ°Êó∂Âô®ÈáçË£ÖËΩΩÂÄºËµã‰∫àtimehÂíåtim
             -el
1026   5                          timel = quzi[tem + 1];
1027   5                          jindu++;
1028   5                          TH0 = timeh; //ÊäätimehÂíåtimelËµã‰∫àËÆ°Êó∂Âô®
1029   5                          TL0 = timel;
1030   5                          m = music2[jindu]; //ÂèñÂæóËäÇÊãç
1031   5                          jindu++;
1032   5                      }
1033   4                      TR0 = 1;        //ÂºÄÂÆöÊó∂Âô®1
1034   4                      delay(m * 300); //Á≠âÂæÖËäÇÊãçÂÆåÊàê, ÈÄöËøáP3^4Âè£ËæìÂá∫Èü≥È¢ë
1035   4                      TR0 = 0;        //ÂÖ≥ÂÆöÊó∂Âô®1
1036   4                      beep = 0;       //‰ΩøbeepÁ´ØÂè£ÁΩÆ0ÔºåËµ∑‰øùÊä§ËúÇÈ∏£Âô®‰ΩúÁî®
1037   4                  }
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 18  

1038   3                  else if (gequ == 2) //Ê≠åÊõ≤ÈÄâÊã©‰Ωç‰∏∫2ÔºåÂàôÊí≠ÊîæÊô¥Â§©
1039   3                  {
1040   4                      p = music3[jindu];
1041   4                      if (p == 0x00) //Â¶ÇÊûúÁ¢∞Âà∞ÁªìÊùüÁ¨¶,Âª∂Êó∂1Áßí,ÂõûÂà∞ÂºÄÂßãÂÜçÊù•‰∏ÄÈÅç
1042   4                      {
1043   5                          jindu = 0;
1044   5                          delay(1000);
1045   5                          break;
1046   5                      }
1047   4                      else if (p == 0xff) //Ëã•Á¢∞Âà∞‰ºëÊ≠¢Á¨¶,Âª∂Êó∂100ms,ÁªßÁª≠Âèñ‰∏ã‰∏ÄÈü≥Á¨¶
1048   4                      {
1049   5                          jindu = jindu + 1;
1050   5                          delay(100);
1051   5                          TR0 = 0;
1052   5                          break;
1053   5                      }
1054   4                      else //Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãÂèñÈü≥Á¨¶ÂíåËäÇÊãç
1055   4                      {
1056   5                          tem = quyin(music3[jindu]); //ÂèñÂá∫ÂΩìÂâçÈü≥Á¨¶Âú®quziÊï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆÂÄº
1057   5                          timeh = quzi[tem];          //ÊääÈü≥Á¨¶Áõ∏Â∫îÁöÑËÆ°Êó∂Âô®ÈáçË£ÖËΩΩÂÄºËµã‰∫àtimehÂíåtim
             -el
1058   5                          timel = quzi[tem + 1];
1059   5                          jindu++;
1060   5                          TH0 = timeh; //ÊäätimehÂíåtimelËµã‰∫àËÆ°Êó∂Âô®
1061   5                          TL0 = timel;
1062   5                          m = music3[jindu]; //ÂèñÂæóËäÇÊãç
1063   5                          jindu++;
1064   5                      }
1065   4                      TR0 = 1;        //ÂºÄÂÆöÊó∂Âô®1
1066   4                      delay(m * 200); //Á≠âÂæÖËäÇÊãçÂÆåÊàê, ÈÄöËøáP3^4Âè£ËæìÂá∫Èü≥È¢ë
1067   4                      TR0 = 0;        //ÂÖ≥ÂÆöÊó∂Âô®1
1068   4                      beep = 0;       //‰ΩøbeepÁ´ØÂè£ÁΩÆ0ÔºåËµ∑‰øùÊä§ËúÇÈ∏£Âô®‰ΩúÁî®
1069   4                  }
1070   3                  else if (gequ == 3) //Ê≠åÊõ≤ÈÄâÊã©‰Ωç‰∏∫3ÔºåÂàôÊí≠ÊîæÊºîÂëò
1071   3                  {
1072   4                      p = music4[jindu];
1073   4                      if (p == 0x00) //Â¶ÇÊûúÁ¢∞Âà∞ÁªìÊùüÁ¨¶,Âª∂Êó∂1Áßí,ÂõûÂà∞ÂºÄÂßãÂÜçÊù•‰∏ÄÈÅç
1074   4                      {
1075   5                          jindu = 0;
1076   5                          delay(1000);
1077   5                          break;
1078   5                      }
1079   4                      else if (p == 0xff) //Ëã•Á¢∞Âà∞‰ºëÊ≠¢Á¨¶,Âª∂Êó∂100ms,ÁªßÁª≠Âèñ‰∏ã‰∏ÄÈü≥Á¨¶
1080   4                      {
1081   5                          jindu = jindu + 1;
1082   5                          delay(100);
1083   5                          TR0 = 0;
1084   5                          break;
1085   5                      }
1086   4                      else //Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãÂèñÈü≥Á¨¶ÂíåËäÇÊãç
1087   4                      {
1088   5                          tem = quyin(music4[jindu]); //ÂèñÂá∫ÂΩìÂâçÈü≥Á¨¶Âú®quziÊï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆÂÄº
1089   5                          timeh = quzi[tem];          //ÊääÈü≥Á¨¶Áõ∏Â∫îÁöÑËÆ°Êó∂Âô®ÈáçË£ÖËΩΩÂÄºËµã‰∫àtimehÂíåtim
             -el
1090   5                          timel = quzi[tem + 1];
1091   5                          jindu++;
1092   5                          TH0 = timeh; //ÊäätimehÂíåtimelËµã‰∫àËÆ°Êó∂Âô®
1093   5                          TL0 = timel;
1094   5                          m = music4[jindu]; //ÂèñÂæóËäÇÊãç
1095   5                          jindu++;
1096   5                      }
1097   4                      TR0 = 1;        //ÂºÄÂÆöÊó∂Âô®1
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 19  

1098   4                      delay(m * 200); //Á≠âÂæÖËäÇÊãçÂÆåÊàê, ÈÄöËøáP3^4Âè£ËæìÂá∫Èü≥È¢ë
1099   4                      TR0 = 0;        //ÂÖ≥ÂÆöÊó∂Âô®1
1100   4                      beep = 0;       //‰ΩøbeepÁ´ØÂè£ÁΩÆ0ÔºåËµ∑‰øùÊä§ËúÇÈ∏£Âô®‰ΩúÁî®
1101   4                  }
1102   3              }
1103   2              if (flag != 1) //Êí≠ÊîæÊ†áÂøó‰Ωç‰∏ç‰∏∫1Êó∂ÔºåÊöÇÂÅúÊí≠ÊîæÈü≥‰πê
1104   2              {
1105   3                  while (flag != 1)
1106   3                      ;
1107   3              }
1108   2          }
1109   1      }
1110          /**********************
1111          ÂáΩÊï∞ÂêçÁß∞Ôºövoid init_sys()
1112          ÂäüËÉΩÊèèËø∞ÔºöÁ≥ªÁªüÂàùÂßãÂåñÔºåÂäüËÉΩÊòØÈÖçÁΩÆIOÂè£
1113          ÂÖ•Âè£ÂèÇÊï∞ÔºöÊó†
1114          Âá∫Âè£ÂèÇÊï∞ÔºöÊó†
1115          Â§áÊ≥®Ôºö
1116          
1117          ***********************/
1118          void init_sys()
1119          {
1120   1          P0M0 = 0xff; //ËÆæÁΩÆÊé®ÊåΩÊ®°Âºè
1121   1          P0M1 = 0x00;
1122   1          P2M0 = 0x08;
1123   1          P2M1 = 0x00;
1124   1          P3M0 = 0x10;
1125   1          P3M1 = 0x00;
1126   1          P4M0 = 0x00;
1127   1          P4M1 = 0x00;
1128   1          P5M0 = 0x00;
1129   1          P5M1 = 0x00;
1130   1      }
1131          void clear_line()
1132          {
1133   1          OLED_ShowCHinese(0, 6, 16);
1134   1          OLED_ShowCHinese(16, 6, 16);
1135   1          OLED_ShowCHinese(32, 6, 16);
1136   1          OLED_ShowCHinese(48, 6, 16);
1137   1          OLED_ShowCHinese(64, 6, 16);
1138   1          OLED_ShowCHinese(80, 6, 16);
1139   1          OLED_ShowCHinese(96, 6, 16);
1140   1          OLED_ShowCHinese(112, 6, 16);
1141   1      }
1142          /**********************
1143          ÂáΩÊï∞ÂêçÁß∞Ôºövoid init()
1144          ÂäüËÉΩÊèèËø∞ÔºöÂÆöÊó∂Âô®ÂíåÂ§ñÈÉ®‰∏≠Êñ≠ÁöÑÂàùÂßãÂåñ
1145          ÂÖ•Âè£ÂèÇÊï∞ÔºöÊó†
1146          Âá∫Âè£ÂèÇÊï∞ÔºöÊó†
1147          Â§áÊ≥®Ôºö
1148          
1149          ***********************/
1150          void init()
1151          {
1152   1          TMOD = 0x01; //ËÆæÁΩÆÂÆöÊó∂Âô®0ÔºåÂÆöÊó∂ÊñπÂºè1Ôºå16‰ΩçÊâãÂä®ÈáçË£ÖÊ®°Âºè
1153   1          TH0 = 0xD8;  //ËÆæÁΩÆÂÆöÊó∂ÂàùÂÄº
1154   1          TL0 = 0xEF;
1155   1          TH1 = (65536 - 1000) / 256; //√â√®√ñ√É¬∂¬®√ä¬±√Ü√∑1¬≥√µ√ñ¬µ
1156   1          TL1 = (65536 - 1000) % 256;
1157   1          IE = 0x87; // 1000 0111  EA=1,EX0=1,ET0=1,EX1=0;
1158   1          EA = 1;    //¬¥√≤¬ø¬™√ó√ú√ñ√ê¬∂√è
1159   1          ET0 = 1;   //¬¥√≤¬ø¬™¬∂¬®√ä¬±√Ü√∑0√ñ√ê¬∂√è
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 20  

1160   1          ET1 = 1;   //¬¥√≤¬ø¬™¬∂¬®√ä¬±√Ü√∑1√ñ√ê¬∂√è
1161   1          TR1 = 1;   //√Ü√¥¬∂¬Ø¬∂¬®√ä¬±√Ü√∑1
1162   1          EX0 = 1;   //√Ü√¥¬∂¬Ø√ç√¢¬≤¬ø√ñ√ê¬∂√è0
1163   1          IP = 0x02; // 0000 0010  PT0=1;   ÂÆöÊó∂Âô®0‰ºòÂÖàÁ∫ßÈ´ò
1164   1          TR0 = 0;   //ÂÆöÊó∂Âô®0ÂºÄÂßãËøêË°å
1165   1          beep = 0;  //‰ΩøbeepÁ´ØÂè£ÁΩÆ0ÔºåËµ∑‰øùÊä§ËúÇÈ∏£Âô®‰ΩúÁî®
1166   1      }
1167          
1168          void TEST_MainPage(void)
1169          {
1170   1          OLED_Clear();
1171   1          if (gequ == 0)
1172   1          {
1173   2              clear_line();
1174   2              display4();
1175   2              OLED_ShowCHinese(74, 5, 11);  //
1176   2              OLED_ShowCHinese(92, 5, 12);  //
1177   2              OLED_ShowCHinese(110, 5, 13); //Â≠§ÂãáËÄÖ
1178   2              OLED_DrawBMP1(0, 0, 128, 32, BMP1);
1179   2          }
1180   1          else if (gequ == 1)
1181   1          {
1182   2              clear_line();
1183   2              display4();
1184   2              OLED_ShowCHinese(82, 5, 17);  //
1185   2              OLED_ShowCHinese(110, 5, 18); //Á®ªÈ¶ô
1186   2              OLED_DrawBMP1(0, 0, 128, 32, BMP1);
1187   2          }
1188   1          else if (gequ == 2)
1189   1          {
1190   2              clear_line();
1191   2              display4();
1192   2              OLED_ShowCHinese(82, 5, 19);  //
1193   2              OLED_ShowCHinese(110, 5, 20); //Êô¥Â§©
1194   2              OLED_DrawBMP1(0, 0, 128, 32, BMP1);
1195   2          }
1196   1          else if (gequ == 3)
1197   1          {
1198   2              clear_line();
1199   2              display4();
1200   2              OLED_ShowCHinese(82, 5, 36);  //
1201   2              OLED_ShowCHinese(110, 5, 37); //ÊºîÂëò
1202   2              OLED_DrawBMP1(0, 0, 128, 32, BMP1);
1203   2          }
1204   1          delay_ms(300);
1205   1      }
1206          
1207          void gunndong()
1208          {
1209   1          OLED_Clear();
1210   1          OLED_WR_Byte(0x2E, OLED_CMD); //ÂÖ≥Èó≠ÊªöÂä®
1211   1          OLED_WR_Byte(0x27, OLED_CMD); //Ê∞¥Âπ≥ÂêëÂ∑¶ÊàñËÄÖÂè≥ÊªöÂä® 26/27
1212   1          OLED_WR_Byte(0x00, OLED_CMD); //ËôöÊãüÂ≠óËäÇ
1213   1          OLED_WR_Byte(0x00, OLED_CMD); //Ëµ∑ÂßãÈ°µ 0
1214   1          OLED_WR_Byte(0x07, OLED_CMD); //ÊªöÂä®Êó∂Èó¥Èó¥Èöî
1215   1          OLED_WR_Byte(0x07, OLED_CMD); //ÁªàÊ≠¢È°µ 7
1216   1          OLED_WR_Byte(0x00, OLED_CMD); //ËôöÊãüÂ≠óËäÇ
1217   1          OLED_WR_Byte(0xFF, OLED_CMD); //ËôöÊãüÂ≠óËäÇ
1218   1          TEST_MainPage();
1219   1          OLED_WR_Byte(0x2F, OLED_CMD); //ÂºÄÂêØÊªöÂä®
1220   1      }
1221          void touzi1()
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 21  

1222          {
1223   1          OLED_DrawBMP1(50, 0, 25, 25, p1);
1224   1          delay_ms(70);
1225   1          OLED_DrawBMP1(50, 0, 25, 25, p4);
1226   1          delay_ms(70);
1227   1          OLED_DrawBMP1(50, 0, 25, 25, p3);
1228   1          delay_ms(70);
1229   1          OLED_DrawBMP1(50, 0, 25, 25, p6);
1230   1          delay_ms(70);
1231   1          OLED_DrawBMP1(50, 0, 25, 25, p2);
1232   1          delay_ms(70);
1233   1          OLED_DrawBMP1(50, 0, 25, 25, p1);
1234   1          delay_ms(70);
1235   1          OLED_DrawBMP1(50, 0, 25, 25, p5);
1236   1          delay_ms(70);
1237   1          OLED_DrawBMP1(50, 0, 25, 25, p4);
1238   1          delay_ms(70);
1239   1          OLED_DrawBMP1(50, 0, 25, 25, p1);
1240   1          delay_ms(70);
1241   1          OLED_DrawBMP1(50, 0, 25, 25, p6);
1242   1          delay_ms(70);
1243   1          OLED_DrawBMP1(50, 0, 25, 25, p3);
1244   1          delay_ms(70);
1245   1      }
1246          void touzi2()
1247          {
1248   1          OLED_DrawBMP1(25, 4, 25, 25, p1);
1249   1          delay_ms(70);
1250   1          OLED_DrawBMP1(25, 4, 25, 25, p4);
1251   1          delay_ms(70);
1252   1          OLED_DrawBMP1(25, 4, 25, 25, p3);
1253   1          delay_ms(70);
1254   1          OLED_DrawBMP1(25, 4, 25, 25, p6);
1255   1          delay_ms(70);
1256   1          OLED_DrawBMP1(25, 4, 25, 25, p2);
1257   1          delay_ms(70);
1258   1          OLED_DrawBMP1(25, 4, 25, 25, p1);
1259   1          delay_ms(70);
1260   1          OLED_DrawBMP1(25, 4, 25, 25, p5);
1261   1          delay_ms(70);
1262   1          OLED_DrawBMP1(25, 4, 25, 25, p4);
1263   1          delay_ms(70);
1264   1          OLED_DrawBMP1(25, 4, 25, 25, p1);
1265   1          delay_ms(70);
1266   1          OLED_DrawBMP1(25, 4, 25, 25, p6);
1267   1          delay_ms(70);
1268   1          OLED_DrawBMP1(25, 4, 25, 25, p3);
1269   1          delay_ms(70);
1270   1      }
1271          void touzi3()
1272          {
1273   1          OLED_DrawBMP1(75, 4, 25, 25, p1);
1274   1          delay_ms(70);
1275   1          OLED_DrawBMP1(75, 4, 25, 25, p4);
1276   1          delay_ms(70);
1277   1          OLED_DrawBMP1(75, 4, 25, 25, p3);
1278   1          delay_ms(70);
1279   1          OLED_DrawBMP1(75, 4, 25, 25, p6);
1280   1          delay_ms(70);
1281   1          OLED_DrawBMP1(75, 4, 25, 25, p2);
1282   1          delay_ms(70);
1283   1          OLED_DrawBMP1(75, 4, 25, 25, p1);
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 22  

1284   1          delay_ms(70);
1285   1          OLED_DrawBMP1(75, 4, 25, 25, p5);
1286   1          delay_ms(70);
1287   1          OLED_DrawBMP1(75, 4, 25, 25, p4);
1288   1          delay_ms(70);
1289   1          OLED_DrawBMP1(75, 4, 25, 25, p1);
1290   1          delay_ms(70);
1291   1          OLED_DrawBMP1(75, 4, 25, 25, p6);
1292   1          delay_ms(70);
1293   1          OLED_DrawBMP1(75, 4, 25, 25, p3);
1294   1          delay_ms(70);
1295   1      }
1296          void tz_show1(unsigned int n)
1297          {
1298   1          if (n == 1)
1299   1              OLED_DrawBMP1(50, 0, 25, 25, p1);
1300   1          if (n == 2)
1301   1              OLED_DrawBMP1(50, 0, 25, 25, p2);
1302   1          if (n == 3)
1303   1              OLED_DrawBMP1(50, 0, 25, 25, p3);
1304   1          if (n == 4)
1305   1              OLED_DrawBMP1(50, 0, 25, 25, p4);
1306   1          if (n == 5)
1307   1              OLED_DrawBMP1(50, 0, 25, 25, p5);
1308   1          if (n == 6)
1309   1              OLED_DrawBMP1(50, 0, 25, 25, p6);
1310   1      }
1311          void tz_show2(unsigned int n)
1312          {
1313   1          if (n == 1)
1314   1              OLED_DrawBMP1(25, 4, 25, 25, p1);
1315   1          if (n == 2)
1316   1              OLED_DrawBMP1(25, 4, 25, 25, p2);
1317   1          if (n == 3)
1318   1              OLED_DrawBMP1(25, 4, 25, 25, p3);
1319   1          if (n == 4)
1320   1              OLED_DrawBMP1(25, 4, 25, 25, p4);
1321   1          if (n == 5)
1322   1              OLED_DrawBMP1(25, 4, 25, 25, p5);
1323   1          if (n == 6)
1324   1              OLED_DrawBMP1(25, 4, 25, 25, p6);
1325   1      }
1326          void tz_show3(unsigned int n)
1327          {
1328   1          if (n == 1)
1329   1              OLED_DrawBMP1(75, 4, 25, 25, p1);
1330   1          if (n == 2)
1331   1              OLED_DrawBMP1(75, 4, 25, 25, p2);
1332   1          if (n == 3)
1333   1              OLED_DrawBMP1(75, 4, 25, 25, p3);
1334   1          if (n == 4)
1335   1              OLED_DrawBMP1(75, 4, 25, 25, p4);
1336   1          if (n == 5)
1337   1              OLED_DrawBMP1(75, 4, 25, 25, p5);
1338   1          if (n == 6)
1339   1              OLED_DrawBMP1(75, 4, 25, 25, p6);
1340   1      }
1341          void main()
1342          {
1343   1          u32 tz1, tz2, tz3, ii;
1344   1          OLED_Init();
1345   1          OLED_Clear();
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 23  

1346   1          init_sys(); //Á≥ªÁªüÂàùÂßãÂåñ
1347   1          init();
1348   1          P0 = 0x00;
1349   1          key1 = 1; //‰∏§‰∏™ÊåâÈîÆËÆæ‰∏∫ËæìÂÖ•Áä∂ÊÄÅÔºåÊ£ÄÊµã‰∏≠Êñ≠
1350   1          key2 = 1;
1351   1          flag = 0; //Êí≠ÊîæÊ†áÂøó‰ΩçÊ∏ÖÈõ∂
1352   1          caidan2 = 0;
1353   1          yinyue2 = 0;
1354   1          zhaopian2 = 0;
1355   1          shipin2 = 0;
1356   1          youxi2 = 0;
1357   1          shuma = 0;
1358   1          music = 0;
1359   1          while (1)
1360   1          {
1361   2              OLED_DrawBMP(0, 0, 128, 6, BMP0);
1362   2              OLED_ShowString(0, 6, "HUNAN UNIVERSITY", 16);
1363   2              if (key1 == 0)
1364   2              {
1365   3                  caidan2 = 1;
1366   3                  OLED_Clear();
1367   3                  while (1)
1368   3                  {
1369   4      
1370   4                      while (1)
1371   4                      {
1372   5                          if (line == 0)
1373   5                          {
1374   6                              OLED_DrawBMP(0, 0, 128, 8, music_bmp);
1375   6                          }
1376   5                          else if (line == 1)
1377   5                          {
1378   6                              OLED_DrawBMP(0, 0, 128, 8, photo);
1379   6                          }
1380   5                          else if (line == 2)
1381   5                          {
1382   6                              OLED_DrawBMP(0, 0, 128, 8, shipin);
1383   6                          }
1384   5                          else if (line == 3)
1385   5                          {
1386   6                              OLED_DrawBMP(0, 0, 128, 8, youxi);
1387   6                          }
1388   5                          if (key1 == 0)
1389   5                          {
1390   6                              delay_ms(25);
1391   6                              if (key1 == 0)
1392   6                              {
1393   7                                  if (line == 3)
1394   7                                  {
1395   8                                      line = 0;
1396   8                                  }
1397   7                                  else
1398   7                                  {
1399   8                                      line = line + 1;
1400   8                                  }
1401   7                              }
1402   6                          }
1403   5                          if (key3 == 0)
1404   5                          {
1405   6                              OLED_Clear();
1406   6                              break;
1407   6                          }
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 24  

1408   5                          if (key2 == 0)
1409   5                          {
1410   6                              if (line == 0) //Èü≥‰πê
1411   6                              {
1412   7                                  OLED_Clear();
1413   7                                  yinyue2 = 1;
1414   7                                  gunndong();
1415   7                                  playmusic();
1416   7                                  music = 0;
1417   7                                  P0 = 0x00;
1418   7                                  OLED_Clear();
1419   7                                  yinyue2 = 0;
1420   7                                  break;
1421   7                              }
1422   6                              else if (line == 2) //ËßÜÈ¢ë
1423   6                              {
1424   7                                  OLED_Clear();
1425   7                                  shipin2 = 1;
1426   7                                  vedio();
1427   7                                  shipin2 = 0;
1428   7                              }
1429   6                              else if (line == 1) //ÂõæÁâá
1430   6                              {
1431   7                                  OLED_Clear();
1432   7                                  zhaopian2 = 1;
1433   7                                  while (1)
1434   7                                  {
1435   8                                      OLED_ColorTurn(color);
1436   8                                      if (key1 == 0)
1437   8                                      {
1438   9                                          OLED_Clear();
1439   9                                          flag_photo++;
1440   9                                          if (flag_photo == 3)
1441   9                                          {
1442  10                                              flag_photo = 0;
1443  10                                          }
1444   9                                      }
1445   8                                      if (key2 == 0)
1446   8                                      {
1447   9                                          color = ~color;
1448   9                                      }
1449   8                                      if (key3 == 0)
1450   8                                      {
1451   9                                          zhaopian2 = 0;
1452   9                                          break;
1453   9                                      }
1454   8                                      if (flag_photo == 0)
1455   8                                      {
1456   9                                          OLED_DrawBMP(0, 2, 128, 8, BMP2);
1457   9                                      }
1458   8                                      else if (flag_photo == 1)
1459   8                                      {
1460   9                                          OLED_DrawBMP(0, 0, 128, 8, BMP3);
1461   9                                      }
1462   8                                      else
1463   8                                          OLED_DrawBMP(0, 0, 128, 8, BMP4);
1464   8                                  }
1465   7                              }
1466   6                              else if (line == 3) //Ê∏∏Êàè
1467   6                              {
1468   7                                  OLED_Clear();
1469   7                                  youxi2 = 1;
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 25  

1470   7                                  while (1)
1471   7                                  {
1472   8                                      OLED_ShowCHinese(0, 2, 9);
1473   8                                      OLED_ShowCHinese(0, 5, 10);
1474   8                                      OLED_ShowNum(48, 2, 1, 1, 16);
1475   8                                      OLED_ShowChar(56, 2, '.', 16);
1476   8                                      OLED_ShowCHinese(64, 2, 43);
1477   8                                      OLED_ShowCHinese(80, 2, 44);
1478   8                                      OLED_ShowCHinese(96, 2, 45);
1479   8                                      OLED_ShowNum(48, 5, 2, 1, 16);
1480   8                                      OLED_ShowChar(56, 5, '.', 16);
1481   8                                      OLED_ShowCHinese(64, 5, 46);
1482   8                                      OLED_ShowCHinese(80, 5, 47);
1483   8                                      OLED_ShowCHinese(96, 5, 48);
1484   8                                      OLED_ShowCHinese(112, 5, 49);
1485   8      
1486   8                                      if (key1 == 0)
1487   8                                      {
1488   9                                          delay_ms(50);
1489   9                                          if (key1 == 0)
1490   9                                          {
1491  10                                              if (line_game == 0)
1492  10                                              {
1493  11                                                  line_game = 1;
1494  11                                              }
1495  10                                              else if (line_game == 1)
1496  10                                              {
1497  11                                                  line_game = 0;
1498  11                                              }
1499  10                                          }
1500   9                                      }
1501   8                                      if (line_game == 0)
1502   8                                      {
1503   9                                          OLED_ShowCHinese(30, 2, 16);
1504   9                                          OLED_ShowCHinese(30, 5, 15);
1505   9                                      }
1506   8                                      else if (line_game == 1)
1507   8                                      {
1508   9                                          OLED_ShowCHinese(30, 5, 16);
1509   9                                          OLED_ShowCHinese(30, 2, 15);
1510   9                                      }
1511   8                                      if (key3 == 0)
1512   8                                      {
1513   9                                          youxi2 = 0;
1514   9                                          break;
1515   9                                      }
1516   8                                      if (key2 == 0)
1517   8                                      {
1518   9                                          if (line_game == 1)
1519   9                                          {
1520  10                                              OLED_Clear();
1521  10                                              game = 0;
1522  10                                              start_game == 0;
*** WARNING C275 IN LINE 1522 OF beep.c: expression with possibly no effect
1523  10                                              end_game = 0;
1524  10                                              OLED_ShowCHinese(6, 2, 31);
1525  10                                              while (1)
1526  10                                              {
1527  11                                                  OLED_ShowCHinese(0, 0, 29);
1528  11                                                  OLED_ShowCHinese(16, 0, 30);
1529  11                                                  OLED_ShowNum(32, 0, 1, 1, 16);//Áé©ÂÆ∂1
1530  11                                                  OLED_ShowCHinese(85, 0, 29);
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 26  

1531  11                                                  OLED_ShowCHinese(101, 0, 30);
1532  11                                                  OLED_ShowNum(117, 0, 2, 1, 16);//Áé©ÂÆ∂2
1533  11                                                  OLED_DrawBMP1(50, 0, 25, 25, p2);
1534  11                                                  OLED_DrawBMP1(25, 4, 25, 25, p3);
1535  11                                                  OLED_DrawBMP1(75, 4, 25, 25, p4);//‰∏âÂº†È™∞Â≠êÂõæ
1536  11                                                  if (key3 == 0 && game == 0)
1537  11                                                  {
1538  12                                                      delay_ms(50);
1539  12                                                      if (key3 == 0 && game == 0)
1540  12                                                      {
1541  13                                                          OLED_ShowCHinese(6, 2, 32);
1542  13                                                          OLED_ShowCHinese(105, 2, 31);
1543  13                                                          game = 1;
1544  13                                                      }
1545  12                                                  }
1546  11                                                  if (key2 == 0 && game == 0)
1547  11                                                  {
1548  12                                                      delay_ms(50);
1549  12                                                      if (key2 == 0 && game == 0)
1550  12                                                      {
1551  13                                                          OLED_ShowCHinese(6, 2, 33);
1552  13                                                          OLED_ShowCHinese(105, 2, 31);
1553  13                                                          game = 1;
1554  13                                                      }
1555  12                                                  }
1556  11                                                  if (key3 == 0 && game == 1)
1557  11                                                  {
1558  12                                                      delay_ms(100);
1559  12                                                      if (key3 == 0 && game == 1)
1560  12                                                      {
1561  13                                                          OLED_ShowCHinese(105, 2, 32);
1562  13                                                          start_game = 1;
1563  13                                                      }
1564  12                                                  }
1565  11                                                  if (key2 == 0 && game == 1)
1566  11                                                  {
1567  12                                                      delay_ms(100);
1568  12                                                      if (key2 == 0 && game == 1)
1569  12                                                      {
1570  13                                                          OLED_ShowCHinese(105, 2, 33);
1571  13                                                          start_game = 1;
1572  13                                                      }
1573  12                                                  }
1574  11                                                  if (start_game == 1 && end_game == 0)
1575  11                                                  {
1576  12                                                      score = 0;
1577  12                                                      OLED_ShowNum(55, 4, score, 2, 16);//ÊòæÁ§∫ÁÇπÊï∞
1578  12                                                      tz1 = (rand() % (6 - 1 + 1)) + 1;
1579  12                                                      tz2 = (rand() % (6 - 1 + 1)) + 1;
1580  12                                                      tz3 = (rand() % (6 - 1 + 1)) + 1;
1581  12                                                      OLED_ShowNum(55, 4, score, 2, 16);
1582  12                                                      touzi1();
1583  12                                                      tz_show1(tz1);
1584  12                                                      score += tz1;
1585  12                                                      OLED_ShowNum(55, 4, score, 2, 16);
1586  12                                                      score += tz2;
1587  12                                                      touzi2();
1588  12                                                      tz_show2(tz2);
1589  12                                                      OLED_ShowNum(55, 4, score, 2, 16);
1590  12                                                      score += tz3;
1591  12                                                      touzi3();
1592  12                                                      tz_show3(tz3);
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 27  

1593  12                                                      OLED_ShowNum(55, 4, score, 2, 16);
1594  12                                                      if (11 <= score && score <= 18)
1595  12                                                      {
1596  13                                                          OLED_ShowCHinese(55, 6, 32);//ÊòæÁ§∫Â§ß
1597  13                                                      }
1598  12                                                      else
1599  12                                                      {
1600  13                                                          OLED_ShowCHinese(55, 6, 33);//ÊòæÁ§∫Â∞è
1601  13                                                      }
1602  12                                                      start_game = ~start_game;
1603  12                                                      delay_ms(3000);
1604  12                                                      end_game = 1;
1605  12                                                  }
1606  11                                                  if (end_game == 1)
1607  11                                                  {
1608  12                                                      youxi2 = 0;
1609  12                                                      OLED_Clear();
1610  12                                                      break;
1611  12                                                  }
1612  11                                              }
1613  10                                          }
1614   9                                          else if (line_game == 0)
1615   9                                          {
1616  10                                              OLED_Clear();
1617  10                                              while (1)
1618  10                                              {
1619  11                                                  OLED_ShowCHinese(0, 0, 81);
1620  11                                                  OLED_ShowCHinese(0, 2, 82);
1621  11                                                  OLED_ShowCHinese(0, 4, 83);
1622  11                                                  OLED_ShowCHinese(0, 6, 84);
1623  11                                                  OLED_ShowCHinese(80, 0, 85);
1624  11                                                  OLED_ShowCHinese(100, 0, 86);
1625  11                                                  OLED_ShowCHinese(80, 2, 87);
1626  11                                                  OLED_ShowCHinese(100, 2, 88);
1627  11                                                  OLED_ShowCHinese(80, 4, 89);
1628  11                                                  OLED_ShowCHinese(100, 4, 90);
1629  11                                                  OLED_ShowCHinese(80, 6, 91);
1630  11                                                  OLED_ShowCHinese(100, 6, 92);
1631  11                                                  if (cxk_line == 0)
1632  11                                                  {
1633  12                                                      OLED_ShowCHinese(60, 6, 16);
1634  12                                                      OLED_ShowCHinese(60, 0, 15);
1635  12                                                  }
1636  11                                                  else if (cxk_line == 1)
1637  11                                                  {
1638  12                                                      OLED_ShowCHinese(60, 0, 16);
1639  12                                                      OLED_ShowCHinese(60, 2, 15);
1640  12                                                  }
1641  11                                                  else if (cxk_line == 2)
1642  11                                                  {
1643  12                                                      OLED_ShowCHinese(60, 2, 16);
1644  12                                                      OLED_ShowCHinese(60, 4, 15);
1645  12                                                  }
1646  11                                                  else if (cxk_line == 3)
1647  11                                                  {
1648  12                                                      OLED_ShowCHinese(60, 4, 16);
1649  12                                                      OLED_ShowCHinese(60, 6, 15);
1650  12                                                  }
1651  11                                                  if (key1 == 0)
1652  11                                                  {
1653  12                                                      delay_ms(50);
1654  12                                                      if (key1 == 0)
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 28  

1655  12                                                      {
1656  13                                                          cxk_line++;
1657  13                                                          if (cxk_line == 4)
1658  13                                                          {
1659  14                                                              cxk_line = 0;
1660  14                                                          }
1661  13                                                      }
1662  12                                                  }
1663  11                                                  if (key3 == 0)
1664  11                                                  {
1665  12                                                      OLED_Clear();
1666  12                                                      break;
1667  12                                                  }
1668  11                                                  if (key2 == 0)
1669  11                                                  {
1670  12                                                      OLED_Clear();
1671  12                                                      flag1 = 0;
1672  12                                                      score = 0;
1673  12                                                      ji = 0;
1674  12                                                      OLED_DrawBMP1(0, 2, 32, 32, pp3);
1675  12                                                      while (1)
1676  12                                                      {
1677  13                                                          OLED_ShowCHinese(20, 0, 46);
1678  13                                                          OLED_ShowCHinese(40, 0, 47);
1679  13                                                          OLED_ShowCHinese(60, 0, 48);
1680  13                                                          OLED_ShowCHinese(80, 0, 49);
1681  13                                                          OLED_ShowNum(85, 6, score1, 2, 16);
1682  13                                                          for (ii = 0; ii < 10; ii++)
1683  13                                                          {
1684  14                                                              if (cxk_line == 0)
1685  14                                                              {
1686  15                                                                  level = 0;
1687  15                                                              }
1688  14                                                              else if (cxk_line == 1)
1689  14                                                              {
1690  15                                                                  level = 3;
1691  15                                                              }
1692  14                                                              else if (cxk_line == 2)
1693  14                                                              {
1694  15                                                                  level = 6;
1695  15                                                              }
1696  14                                                              else if (cxk_line == 3)
1697  14                                                              {
1698  15                                                                  cxk_line = (rand() % (6 - 1 + 1)) + 1;
1699  15                                                              }
1700  14                                                              OLED_ShowCHinese(45, 6, 52);
1701  14                                                              OLED_ShowCHinese(61, 6, 53);
1702  14                                                              OLED_ShowChar(77, 6, ':', 16);
1703  14                                                              for (ji = 112; ji >= 16; ji -= 16)
1704  14                                                              {
1705  15                                                                  OLED_DrawBMP1(ji, 3, 16, 16, pp1);
1706  15                                                                  OLED_DrawBMP1(ji + 16, 3, 16, 16, pp2);
1707  15                                                                  delay_ms(200 - level * 20);
1708  15      
1709  15                                                                  OLED_DrawBMP1(0, 2, 32, 32, pp3);
1710  15                                                                  if (key2 == 0)
1711  15                                                                  {
1712  16                                                                      delay_ms(10);
1713  16                                                                      if (key2 == 0)
1714  16                                                                      {
1715  17                                                                          OLED_DrawBMP1(0, 2, 32, 32, pp5);
1716  17                                                                          if (16 <= ji && ji <= 32)
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 29  

1717  17                                                                          {
1718  18                                                                              score1++;
1719  18                                                                          }
1720  17                                                                          delay_ms(10);
1721  17                                                                          OLED_DrawBMP1(0, 2, 32, 32, pp3);
1722  17                                                                      }
1723  16                                                                  }
1724  15                                                              }
1725  14                                                              OLED_ShowNum(85, 6, score1, 2, 16);
1726  14                                                          }
1727  13                                                          if (score1 >= 8)
1728  13                                                          {
1729  14                                                              OLED_ShowNum(60, 3, 3, 1, 16);
1730  14                                                              delay_ms(500);
1731  14                                                              OLED_ShowNum(60, 3, 2, 1, 16);
1732  14                                                              delay_ms(500);
1733  14                                                              OLED_ShowNum(60, 3, 1, 1, 16);
1734  14                                                              delay_ms(500);
1735  14                                                              OLED_ShowCHinese(60, 3, 16);
1736  14                                                              score1 = 0;
1737  14                                                              cxk_line=0;
1738  14                                                              OLED_Clear();
1739  14                                                              break;
1740  14                                                          }
1741  13                                                          else
1742  13                                                          {
1743  14                                                              OLED_ShowCHinese(40, 4, 38);
1744  14                                                              OLED_ShowCHinese(60, 4, 39);
1745  14                                                              OLED_ShowCHinese(80, 4, 40);
1746  14                                                              delay_ms(500);
1747  14                                                              delay_ms(500);
1748  14                                                              delay_ms(500);
1749  14                                                              score1=0;
1750  14                                                              cxk_line=0;
1751  14                                                              OLED_Clear();
1752  14                                                              break;
1753  14                                                          }
1754  13                                                      }
1755  12                                                  }
1756  11                                              }
1757  10                                          }
1758   9                                      }
1759   8                                  }
1760   7                              }
1761   6                          }
1762   5                      }
1763   4                      caidan2 = 0;
1764   4                      break;
1765   4                  }
1766   3                  OLED_WR_Byte(0x2E, OLED_CMD); //ÂÖ≥Èó≠ÊªöÂä®
1767   3              }
1768   2              if (key3 == 0)
1769   2              {
1770   3                  OLED_Clear();
1771   3                  while (1)
1772   3                  {
1773   4                      if (cxk == 0)
1774   4                      {
1775   5                          OLED_ShowCHinese(8, 1, 55);
1776   5                          OLED_ShowCHinese(24, 1, 56);
1777   5                          OLED_ShowCHinese(40, 1, 57);
1778   5                          OLED_ShowCHinese(56, 1, 58);
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 30  

1779   5                          OLED_ShowCHinese(72, 1, 59);
1780   5                          OLED_ShowCHinese(86, 1, 60);
1781   5                          OLED_ShowCHinese(102, 1, 61);
1782   5                          OLED_ShowCHinese(8, 5, 62);
1783   5                          OLED_ShowCHinese(24, 5, 63);
1784   5                          OLED_ShowCHinese(40, 5, 64);
1785   5                          OLED_ShowCHinese(56, 5, 65);
1786   5                          OLED_ShowCHinese(72, 5, 66);
1787   5                          OLED_ShowCHinese(86, 5, 67);
1788   5                          OLED_ShowCHinese(102, 5, 68);
1789   5                      }
1790   4                      else if (cxk == 1)
1791   4                      {
1792   5                          OLED_ShowCHinese(8, 1, 69);
1793   5                          OLED_ShowCHinese(24, 1, 70);
1794   5                          OLED_ShowCHinese(40, 1, 71);
1795   5                          OLED_ShowCHinese(56, 1, 72);
1796   5                          OLED_ShowCHinese(72, 1, 73);
1797   5                          OLED_ShowCHinese(86, 1, 74);
1798   5                          OLED_ShowCHinese(102, 1, 75);
1799   5                          OLED_ShowCHinese(8, 5, 76);
1800   5                          OLED_ShowCHinese(24, 5, 77);
1801   5                          OLED_ShowCHinese(40, 5, 16);
1802   5                          OLED_ShowCHinese(56, 5, 16);
1803   5                          OLED_ShowString(44, 5, "RAP", 16);
1804   5                          OLED_ShowCHinese(72, 5, 78);
1805   5                          OLED_ShowCHinese(86, 5, 79);
1806   5                          OLED_ShowCHinese(102, 5, 80);
1807   5                      }
1808   4                      if (key1 == 0)
1809   4                      {
1810   5                          delay_ms(25);
1811   5                          if (key1 == 0)
1812   5                          {
1813   6                              cxk++;
1814   6                              if (cxk == 2)
1815   6                              {
1816   7                                  cxk = 0;
1817   7                              }
1818   6                          }
1819   5                      }
1820   4                      if (key2 == 0)
1821   4                      {
1822   5                          OLED_Clear();
1823   5                          break;
1824   5                      }
1825   4                  }
1826   3              }
1827   2          }
1828   1      }
1829          /**********************
1830          ÂáΩÊï∞ÂêçÁß∞Ôºövoid tim1() interrupt 1
1831          ÂäüËÉΩÊèèËø∞ÔºöÂÆöÊó∂Âô®0‰∏≠Êñ≠Â§ÑÁêÜÔºåÈáçÊñ∞Ë£ÖÂÄºÔºåÂπ∂ÊääbeepÂÄºÂèñÂèçÔºå‰∫ßÁîüÊñπÊ≥¢
1832          ÂÖ•Âè£ÂèÇÊï∞ÔºöÊó†
1833          Âá∫Âè£ÂèÇÊï∞ÔºöÊó†
1834          Â§áÊ≥®Ôºö
1835          
1836          ***********************/
1837          void tim1() interrupt 1 //ËÆ°Êó∂Âô®ÊéßÂà∂È¢ëÁéá
1838          {
1839   1          TH0 = timeh; //ËµãÂàùÂÄº
1840   1          TL0 = timel;
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 31  

1841   1          beep = ~beep; //‰∏≠Êñ≠‰ΩøÂæóbeepÁøªËΩ¨‰∫ßÁîüÊñπÊ≥¢
1842   1      }
1843          /**********************
1844          ÂáΩÊï∞ÂêçÁß∞Ôºövoid ex1() interrupt 0
1845          ÂäüËÉΩÊèèËø∞ÔºöÊåâ‰∏ãÊåâÈîÆ1ÁöÑÂ§ñÈÉ®‰∏≠Êñ≠ÔºåÂØπÊ†áÂøó‰ΩçÂèñÂèçÔºåÂäüËÉΩÊòØÊöÇÂÅúÂíåÊí≠ÊîæÈü≥‰πê
1846          ÂÖ•Âè£ÂèÇÊï∞ÔºöÊó†
1847          Âá∫Âè£ÂèÇÊï∞ÔºöÊó†
1848          Â§áÊ≥®Ôºö
1849          
1850          ***********************/
1851          void ex1() interrupt 0
1852          {
1853   1          if (key3 == 0)
1854   1          {
1855   2              delay_ms(50);
1856   2              if (key3 == 0)
1857   2              {
1858   3                  while (!key3)
1859   3                      ;
1860   3                  flag = ~flag;
1861   3              }
1862   2          }
1863   1      }
1864          /**********************
1865          ÂáΩÊï∞ÂêçÁß∞Ôºövoid ex2() interrupt 2
1866          ÂäüËÉΩÊèèËø∞ÔºöÊåâ‰∏ãÊåâÈîÆ2ÁöÑÂ§ñÈÉ®‰∏≠Êñ≠Ôºå‰ΩúÁî®‰∏∫ÂàáÊç¢Ê≠åÊõ≤
1867          ÂÖ•Âè£ÂèÇÊï∞ÔºöÊó†
1868          Âá∫Âè£ÂèÇÊï∞ÔºöÊó†
1869          Â§áÊ≥®Ôºö
1870          
1871          ***********************/
1872          void ex2() interrupt 2
1873          {
1874   1          delay(5);
1875   1          if (key2 == 0 && music == 1) //ÊåâÈîÆkey2Êåâ‰∏ãÔºåÂàáÊç¢Ê≠åÊõ≤
1876   1          {
1877   2              jindu = 0; //Ê≠åÊõ≤ÁöÑËøõÂ∫¶Ê∏ÖÈõ∂Ôºå‰ªéÂ§¥ÂºÄÂßãÊºîÂî±
1878   2              gequ++;    //‰∏ã‰∏ÄÊõ≤
1879   2              flag_music = 0;
1880   2              if (gequ == 4) //Âà∞ËææÊúÄÂêé‰∏ÄÈ¶ñË∞ÉÂà∞Á¨¨‰∏ÄÈ¶ñ
1881   2                  gequ = 0;
1882   2              gunndong();
1883   2          }
1884   1      }
1885          
1886          void timer1() interrupt 3
1887          {
1888   1          shuma++;
1889   1          if (shuma == 8)
1890   1          {
1891   2              shuma = 0;
1892   2          }
1893   1          P0 = 0;
1894   1          P2 = weixuan[shuma];
1895   1          switch (shuma)
1896   1          {
1897   2          case 0:
1898   2              P0 = huanyin[0];
1899   2              break;
1900   2          case 1:
1901   2              P0 = huanyin[1];
1902   2              break;
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 32  

1903   2          case 2:
1904   2              P0 = huanyin[2];
1905   2              break;
1906   2          case 3:
1907   2              P0 = huanyin[3];
1908   2              break;
1909   2          case 4:
1910   2              P0 = huanyin[4];
1911   2              break;
1912   2          case 5:
1913   2              P0 = huanyin[5];
1914   2              break;
1915   2          case 6:
1916   2              P0 = huanyin[6];
1917   2              break;
1918   2          case 7:
1919   2              P0 = huanyin[7];
1920   2              break;
1921   2          default:
1922   2              P0 = huanyin[7];
1923   2              break;
1924   2          }
1925   1          if (caidan2 == 1)
1926   1          {
1927   2              switch (shuma)
1928   2              {
1929   3              case 2:
1930   3                  P0 = caidan[2];
1931   3                  break;
1932   3              case 3:
1933   3                  P0 = caidan[3];
1934   3                  break;
1935   3              case 4:
1936   3                  P0 = caidan[4];
1937   3                  break;
1938   3              case 5:
1939   3                  P0 = caidan[5];
1940   3                  break;
1941   3              case 6:
1942   3                  P0 = caidan[6];
1943   3                  break;
1944   3              default:
1945   3                  P0 = caidan[0];
1946   3                  break;
1947   3              }
1948   2          }
1949   1          if (yinyue2 == 1)
1950   1          {
1951   2              switch (shuma)
1952   2              {
1953   3              case 0:
1954   3                  P0 = yinyue[jindu & 8];
1955   3                  break;
1956   3              case 1:
1957   3                  P0 = yinyue[(jindu + 1) % 8];
1958   3                  break;
1959   3              case 2:
1960   3                  P0 = yinyue[(jindu + 2) % 8];
1961   3                  break;
1962   3              case 3:
1963   3                  P0 = yinyue[(jindu + 3) % 8];
1964   3                  break;
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 33  

1965   3              case 4:
1966   3                  P0 = yinyue[(jindu + 4) % 8];
1967   3                  break;
1968   3              case 5:
1969   3                  P0 = yinyue[(jindu + 5) % 8];
1970   3                  break;
1971   3              case 6:
1972   3                  P0 = yinyue[(jindu + 6) % 8];
1973   3                  break;
1974   3              case 7:
1975   3                  P0 = yinyue[(jindu + 7) % 8];
1976   3                  break;
1977   3              default:
1978   3                  P0 = yinyue[(jindu + 8) % 8];
1979   3                  break;
1980   3              }
1981   2          }
1982   1          if (zhaopian2 == 1)
1983   1          {
1984   2              switch (shuma)
1985   2              {
1986   3              case 1:
1987   3                  P0 = zhaopian[1];
1988   3                  break;
1989   3              case 2:
1990   3                  P0 = zhaopian[2];
1991   3                  break;
1992   3              case 3:
1993   3                  P0 = zhaopian[3];
1994   3                  break;
1995   3              case 4:
1996   3                  P0 = zhaopian[4];
1997   3                  break;
1998   3              case 5:
1999   3                  P0 = zhaopian[5];
2000   3                  break;
2001   3              case 6:
2002   3                  P0 = zhaopian[6];
2003   3                  break;
2004   3              default:
2005   3                  P0 = zhaopian[7];
2006   3                  break;
2007   3              }
2008   2          }
2009   1          if (shipin2 == 1)
2010   1          {
2011   2              switch (shuma)
2012   2              {
2013   3              case 2:
2014   3                  P0 = shipin1[2];
2015   3                  break;
2016   3              case 3:
2017   3                  P0 = shipin1[3];
2018   3                  break;
2019   3              case 4:
2020   3                  P0 = shipin1[4];
2021   3                  break;
2022   3              case 5:
2023   3                  P0 = shipin1[5];
2024   3                  break;
2025   3              case 6:
2026   3                  P0 = shipin1[6];
C51 COMPILER V9.54   BEEP                                                                  07/09/2023 17:06:53 PAGE 34  

2027   3                  break;
2028   3              default:
2029   3                  P0 = shipin1[7];
2030   3                  break;
2031   3              }
2032   2          }
2033   1          if (youxi2 == 1)
2034   1          {
2035   2              switch (shuma)
2036   2              {
2037   3              case 2:
2038   3                  P0 = youxi1[2];
2039   3                  break;
2040   3              case 3:
2041   3                  P0 = youxi1[3];
2042   3                  break;
2043   3              case 4:
2044   3                  P0 = youxi1[4];
2045   3                  break;
2046   3              case 5:
2047   3                  P0 = youxi1[5];
2048   3                  break;
2049   3              case 6:
2050   3                  P0 = youxi1[6];
2051   3                  break;
2052   3              default:
2053   3                  P0 = shipin1[7];
2054   3                  break;
2055   3              }
2056   2          }
2057   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8340    ----
   CONSTANT SIZE    =  34913    ----
   XDATA SIZE       =     83      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
