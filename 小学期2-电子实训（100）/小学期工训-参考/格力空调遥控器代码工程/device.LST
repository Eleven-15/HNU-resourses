C51 COMPILER V9.05   DEVICE                                                                08/23/2015 16:49:59 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE DEVICE
OBJECT MODULE PLACED IN device.OBJ
COMPILER INVOKED BY: D:\Software\Study-software\keil4\C51\BIN\C51.EXE device.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "device.h"
   2          #include "intrins.h"
   3          /********************
   4           *定时器0部件实现
   5           ********************/
   6          uint8 Timer01msFlag0=0;
   7          uint8 Timer01msFlag1=0;
   8          void Timer0Init(void)           //1??@11.0592MHz
   9          {
  10   1              AUXR &= 0x7F;           //?????12T??
  11   1              TMOD &= 0xF0;           //???????
  12   1              TMOD |= 0x01;           //???????
  13   1              IE |=0x02;
  14   1              TL0 = TIMER01MSTL0;             //??????
  15   1              TH0 = TIMER01MSTH0;             //??????
  16   1              TF0 = 0;                //??TF0??
  17   1              TR0 = 1;                //???0????
  18   1      }
  19          
  20          /********************
  21           *定时器1部件实现
  22           ********************/
  23          uint8 IRFLAG=0;
  24          uint16 timer0Num=0;
  25          void Timer1Init(void)           //1??@11.0592MHz
  26          {
  27   1              AUXR &= 0xBF;           //?????12T??
  28   1              TMOD &= 0x0F;           //???????
  29   1              TMOD |= 0x20;
  30   1              IE |=0x08;
  31   1              IP |=0x08;
  32   1              TF1 = 0;                //??TF1??
  33   1              TR1=0;
  34   1      }
  35          
  36          /********************
  37           *数码管部件实现
  38           ********************/
  39          uint8 digitalTubeData[DIGTUBENUM]={0};
  40          uint8 digindex=0;                                  //当前显示的数码管位置       
  41          pdata uint8 digtalduan[18]={0x3f,0x06,0x5b,0x4f,
  42                                                          0x66,0x6d,0x7d,0x07,
  43                                                          0x7f,0x6f,0x77,0x7c,
  44                                                          0x39,0x5e,0x79,0x71,
  45                                                          0x40,0x00};
  46                    
  47          /********************
  48           *数码管动态扫描函数
  49           ********************/
  50          void  digScan(){
  51   1              if(Timer01msFlag0==1){   //根据1ms定时器列表判断是否进行扫描
  52   2                      P0=0;                                                            //清零P0消除残影
  53   2                      P2&=0xf8;
  54   2                      P2|=digindex;                                            //点亮当前位
  55   2                      P0=digtalduan[digitalTubeData[digindex]]; //输出对应位置上的值
C51 COMPILER V9.05   DEVICE                                                                08/23/2015 16:49:59 PAGE 2   

  56   2                      Timer01msFlag0=0;                                                  //清零1ms定时器列表的标志位
  57   2                      digindex=(digindex+1)%DIGTUBENUM;                                          //切换到下一个 位置
  58   2              }
  59   1      }
  60          /********************
  61           *按键部件实现
  62           ********************/
  63          xdata struct keyfunc  keygroup={0};
  64          void  keyInit(){
  65   1              keygroup.sensitivity=KEYSENSITY;
  66   1              P1ASF=0x80;                                                        //初始化导航按键的一些参数
  67   1              ADC_RES=0;
  68   1              ADC_CONTR=0X8F;
  69   1              CLK_DIV=0X00;
  70   1      }
  71          /********************
  72           *按键扫描实现
  73           ********************/
  74          void  keyScan(){
  75   1              uint8 i,adcResult;
  76   1              if(Timer01msFlag1==1){          
  77   2                      Timer01msFlag1=0;//1ms到了？
  78   2                      if(P3&0x04)                                                               //判断当前按键的状态，松开up加1，按下down加1
  79   2                              keygroup.up[0]++;
  80   2                      else 
  81   2                              keygroup.down[0]++;
  82   2                      if(P3&0x08)
  83   2                              keygroup.up[1]++;
  84   2                      else 
  85   2                              keygroup.down[1]++;
  86   2                      keygroup.up[2]++;
  87   2                      keygroup.up[3]++;
  88   2                      keygroup.up[4]++;
  89   2                      keygroup.up[5]++;
  90   2                      keygroup.up[6]++;
  91   2                      keygroup.up[7]++;
  92   2                      if(ADC_CONTR&0x10){                                             //数模转换完成，则重新进行转换
  93   3                                ADC_CONTR&=~0x10;
  94   3                                ADC_CONTR|=0x08;
  95   3                                adcResult=ADC_RES>>5;
  96   3                      }
  97   2                      switch(adcResult){                                              //跟数模转换获得的值判断按下的是哪个按键
  98   3                              case 0: keygroup.up[2]--;keygroup.down[2]++;break;
  99   3                              case 1: keygroup.up[3]--;keygroup.down[3]++;break;
 100   3                              case 2: keygroup.up[4]--;keygroup.down[4]++;break;
 101   3                              case 3: keygroup.up[5]--;keygroup.down[5]++;break;
 102   3                              case 4: keygroup.up[6]--;keygroup.down[6]++;break;
 103   3                              case 5: keygroup.up[7]--;keygroup.down[7]++;break;
 104   3                      }
 105   2              }
 106   1              else return;
 107   1              //统计的次数达到sensitivity，则对按键的状态进行更新
 108   1              if(keygroup.up[0]+keygroup.down[0]==keygroup.sensitivity){
 109   2                      for(i=0;i<KEYNUM;i++){     //判断该周期内按键处于松开还是按下状态
 110   3                              keygroup.state[i]=keygroup.up[i]>keygroup.down[i]?0:1;
 111   3                              keygroup.up[i]=0;
 112   3                              keygroup.down[i]=0;
 113   3                      }
 114   2              }
 115   1      }


C51 COMPILER V9.05   DEVICE                                                                08/23/2015 16:49:59 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    372    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     25    ----
   PDATA SIZE       =     18    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
